{"version":3,"sources":["components/SearchBox.js","components/AddContact.js","components/Numbers.js","services/ContactService.js","components/Notification.js","App.js","index.js"],"names":["SearchBox","searchField","handleSearch","value","onChange","AddContact","handleSubmit","newName","handleNewName","newPhone","handleNewPhone","onSubmit","e","type","Numbers","filteredPersons","deleteHandler","map","person","name","number","onClick","id","baseUrl","Notification","message","error","className","App","useState","persons","setPersons","setNewName","setNewPhone","setSearchField","setMessage","setError","useEffect","axios","get","then","response","data","initialPersons","console","log","filter","toLowerCase","includes","target","preventDefault","newPhoneObject","found","find","alert","newNumberObject","put","updateNumber","newPerson","newPersons","setTimeout","post","newContact","concat","catch","p","window","confirm","delete","deleteNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a2b0421.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst SearchBox = ({searchField, handleSearch}) => {\r\n    return (\r\n        <>\r\n            search contact: <input value={searchField} onChange={handleSearch} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\r\n\r\nconst AddContact = ({handleSubmit, newName, handleNewName, newPhone, handleNewPhone}) => {\r\n    return (\r\n        <>\r\n            <h2>Add new contact</h2>\r\n            <form onSubmit={handleSubmit}>\r\n            <div>\r\n                name: <input value={newName} onChange={(e) => handleNewName(e)} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newPhone} onChange={(e) => handleNewPhone(e)} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddContact","import React from 'react'\r\n\r\nconst Numbers = ({filteredPersons, deleteHandler}) => {\r\n\r\n    return (\r\n        <>\r\n            <h2>Numbers</h2>\r\n            {filteredPersons.map(person => {\r\n                return (\r\n                <div key={person.id}>\r\n                    {person.name}  {person.number} <button onClick={() => deleteHandler(person.id)}>Delete</button>\r\n                </div>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Numbers","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newPhoneObject) => {\r\n    const request = axios.post(baseUrl, newPhoneObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteNumber = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateNumber = (id, newNumberObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newNumberObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport {getAll, create, deleteNumber, updateNumber}","import React from 'react'\r\nimport './notification.css'\r\n\r\nconst Notification = ({message, error}) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n    \r\n    if(message && error === false) {\r\n        return (\r\n            <div className=\"message\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div className=\"errormessage\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\n// import axios from 'axios'\nimport SearchBox from './components/SearchBox'\nimport AddContact from './components/AddContact'\nimport Numbers from './components/Numbers'\nimport {getAll, create, deleteNumber, updateNumber} from './services/ContactService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [searchField, setSearchField] = useState('')\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    getAll()\n    .then(initialPersons => setPersons(initialPersons))\n      console.log(\"successful import\")\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const found = persons.find(person => person.name === newName)\n\n    if(found && found.number === newPhone) {\n      alert('name already exists')\n    } \n\n    else if(found && found.number !== newPhone) {\n      const newNumberObject = {\n        name: newName,\n        number: newPhone\n      }\n\n      updateNumber(found.id, newNumberObject)\n      .then(newPerson => {\n        const newPersons = persons.map(person => person.id !== newPerson.id ? person : newPerson)\n        setPersons(newPersons)\n        setNewName('')\n        setNewPhone('')\n\n        setMessage(`The contact ${newName} has been successfull Updated!`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n      })\n    }\n    \n    else {\n      const newNameObject = {\n        name: newName,\n        number: newPhone\n      }\n\n      create(newNameObject)\n      .then(newContact => {\n        setPersons(persons.concat(newContact))\n        setNewName('')\n        setNewPhone('')\n\n        setMessage(`The Contact ${newName} has been successfully Added!`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n      })\n      .catch(error => {\n        setMessage(error.response.data)\n        setError(true)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n      })\n  \n      // axios\n      //   .post('http://localhost:3001/persons', newNameObject)\n      //   .then(response => {\n      //     setPersons(persons.concat(response.data))\n      //     setNewName('')\n      //     setNewPhone('')\n      //   })\n    }\n  }\n\n  const deleteHandler = (id) => {\n\n    const p = persons.find(person => person.id === id)\n    \n    if(window.confirm(`Are you sure you want to delete ${p.name}`)) {\n      deleteNumber(id)\n      .then(\n        setPersons(persons.filter(person => person.id !== id))\n      )\n      .catch(error => {\n        setMessage('Contact has already been Deleted!')\n        setError(true)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n      })\n    }\n  }\n\n  const handleNewName = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNewPhone = (e) => {\n    setNewPhone(e.target.value)\n  }\n\n  const handleSearch = (e) => {\n    setSearchField(e.target.value)\n  }\n\n  const filteredPersons = \n    persons.filter(person => {\n      return person.name.toLowerCase().includes(searchField.toLowerCase())})\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notification message={message} error={error} />\n\n      <SearchBox \n      searchField={searchField} \n      handleSearch={handleSearch} \n      />\n      <AddContact \n      handleSubmit={handleSubmit} \n      newName={newName} \n      handleNewName={handleNewName} \n      newPhone={newPhone} \n      handleNewPhone={handleNewPhone} \n      />\n      <Numbers \n      filteredPersons={filteredPersons} deleteHandler={deleteHandler}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}